{"version":3,"sources":["components/AppContainer.js","components/SectionTitle.js","components/InputContainer.js","components/Button.js","services/api.js","components/Loading.js","functions/validateFields.js","components/OrderData.js","App.js","index.js"],"names":["AppContainer","props","className","children","SectionTitle","title","InputContainer","Button","onClick","e","preventDefault","action","Api","axios","create","baseURL","timeout","headers","Loading","src","alt","validateFields","object","emptyFields","key","indexOf","OrderData","useState","cities","id","currentCity","setCurrentCity","neighborhoods","filter","el","city_id","setNeighborhoods","currentNeighborhood","setCurrentNeighborhood","parseFloat","price","deliveryPrice","setDeliveryPrice","useEffect","snacks_categories","currentSnackCategory","setCurrentSnackCategory","snacks","category_id","setSnacks","currentSnack","setCurrentSnack","quantity","setQuantity","total","setTotal","order","setOrder","name","cellphone","email","phone","date","time","city","find","neighborhood","street","number","comp","delivery","customerData","setCustomerData","orderMessage","setOrderMessage","sendOrder","a","length","body","JSON","stringify","post","data","success","type","placeholder","onChange","target","value","nameHandler","cellphoneHandler","emailHandler","phoneHandler","dateHandler","timeHandler","cityHandler","listOfCities","Array","isArray","map","renderCitiesOptions","neighborhoodHandler","listOfNeighborhoods","renderNeighborhoodsOptions","streetHandler","min","numberHandler","compHandler","isNaN","toFixed","replace","checked","deliveryHandler","category","s","snackCategoryHandler","listOfSnacksCategories","renderSnacksCategoriesOptions","snacksHandler","listOfSnacks","renderSnacksOptions","step","minimum","parseInt","quantityHandler","newItem","orderTitle","i","reduce","t","App","ready","setReady","buffets","buffets_categories","setData","get","getData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7476e471.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContainer = props => <section className='app-container'>{props.children}</section>;\n\nexport default AppContainer;\n","import React from 'react';\n\nconst SectionTitle = props => <h2 className='section-title'>{props.title}</h2>;\n\nexport default SectionTitle;\n","import React from 'react';\n\nconst InputContainer = props => <div className='input-container'>{props.children}</div>;\n\nexport default InputContainer;\n","import React from 'react';\n\n\nconst Button = props => {\n\n    const action = e => {\n        e.preventDefault();\n        props.action();\n    }\n\n    return(\n        <button onClick={e => action(e)} className='standard-button'>{props.title}</button>\n    );\n}\n\nexport default Button;\n","import axios from 'axios';\n\nconst Api = axios.create({\n    baseURL: 'https://globalnetsis.com.br/clientes/chicrecheme/api', //'http://localhost:8080/orders-project/api'\n    timeout: 10000,\n    headers: {\n        'accept': 'application/json'\n    }\n});\n\nexport default Api;","import React from 'react';\n\nconst Loading = () => <img src='./chicrecheme/wp-content/themes/chicrecheme/assets/app/media/load.84b69321.gif' className='loading' alt='Loading Icon'/>;\n\nexport default Loading;","const validateFields = object => {\n    const emptyFields = ['email', 'phone', 'comp'];\n\n    for (let key in object) {\n        if (emptyFields.indexOf(key) === -1 && object[key] === '') {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport default validateFields;\n","import React, { useState, useEffect } from 'react'\nimport SectionTitle from './SectionTitle'\nimport InputContainer from './InputContainer'\nimport Button from './Button'\nimport Api from '../services/api'\nimport Loading from './Loading'\nimport validateFields from '../functions/validateFields'\n\nconst OrderData = props => {\n    const [currentCity, setCurrentCity] = useState(props.cities[0].id)\n    const [neighborhoods, setNeighborhoods] = useState(props.neighborhoods.filter(el => el.city_id === currentCity))\n    const [currentNeighborhood, setCurrentNeighborhood] = useState(neighborhoods[0])\n    const [deliveryPrice, setDeliveryPrice] = useState(parseFloat(currentNeighborhood.price))\n\n    /*\n        User informations form \n    */\n   \n        /*\n            Input Handlers\n        */\n\n        const cityHandler = e => {\n            const city = props.cities.find(el => el.name === e.target.value)\n            setCurrentCity(city.id)\n        }\n\n        const neighborhoodHandler = e => {\n            const neighborhood = neighborhoods.find(el => el.name === e.target.value)\n            setCurrentNeighborhood(neighborhood)\n        }\n\n        /*\n            Use Effects\n        */\n\n        useEffect(() => {\n            const price = parseFloat(currentNeighborhood.price)\n            setDeliveryPrice(price)\n        }, [currentNeighborhood])\n\n        useEffect(() => {\n            setCurrentNeighborhood(neighborhoods[0])\n        }, [neighborhoods])\n\n        useEffect(() => {\n            setNeighborhoods(props.neighborhoods.filter(el => el.city_id === currentCity))\n        }, [currentCity])\n\n    /* =========================================================================================== */\n\n    /*\n        Products\n    */\n\n    const [currentSnackCategory, setCurrentSnackCategory] = useState(props.snacks_categories[0].id)\n    const [snacks, setSnacks] = useState(props.snacks.filter(el => el.category_id === currentSnackCategory))\n    const [currentSnack, setCurrentSnack] = useState(snacks[0])\n    const [quantity, setQuantity] = useState('')\n    const [total, setTotal] = useState(0)\n    const [order, setOrder] = useState([])\n\n        /*\n            Input handlers\n        */\n    \n        const snackCategoryHandler = e => {\n            const category = props.snacks_categories.find(s => s.name === e.target.value)\n            setCurrentSnackCategory(category.id)\n        }\n\n        const snacksHandler = e => {\n            setCurrentSnack(snacks.find(el => el.name === e.target.value))\n        }\n\n        const quantityHandler = e => {\n            if (isNaN(e.target.value)) {\n                setQuantity('')\n            } else {\n                setQuantity(parseInt(e.target.value))\n            }\n        }\n\n        /*\n            Helpers\n        */\n\n        const addToOrder = () => {\n            const newItem = {\n                id: currentSnack.id,\n                name: currentSnack.name,\n                price: currentSnack.price,\n                category: props.snacks_categories.find(el=> el.id === currentSnackCategory),\n                quantity,\n                total\n            }\n\n            if (newItem.quantity > 0 && newItem.quantity % currentSnack.minimum === 0)\n                setOrder([...order, newItem])\n        }\n\n        const orderTitle = () => {\n            if (order.length)\n                return (\n                    <ul className='order-list order-list--header'>\n                        <li>Item</li>\n                        <li>Nome</li>\n                        <li>Categoria</li>\n                        <li>Preço</li>\n                        <li>Quantidade</li>\n                        <li>Total</li>\n                    </ul>\n                )\n        }\n\n        /*\n            Use Effects\n        */\n\n        useEffect(() => {\n            setSnacks(props.snacks.filter(el => el.category_id === currentSnackCategory))\n\n        }, [currentSnackCategory])\n\n        useEffect(() => {\n            setCurrentSnack(snacks[0])\n        }, [snacks])\n\n        useEffect(() => {\n            if (currentSnack)\n                setTotal(currentSnack.price * quantity)\n\n        }, [quantity, currentSnack])\n\n        useEffect(() => {\n            setQuantity(0)\n        }, [currentSnack])\n\n    /* =========================================================================================== */\n\n    /*\n        Send order\n    */\n\n    const [customerData, setCustomerData] = useState({\n        name: '',\n        cellphone: '',\n        email: '',\n        phone: '',\n        date: '',\n        time: '',\n        city: props.cities.find(el => el.id === currentCity),\n        neighborhood: currentNeighborhood.name,\n        street: '',\n        number: '',\n        comp: '',\n        delivery: false,\n        price: deliveryPrice\n    })\n\n    const nameHandler = e => setCustomerData({...customerData, name: e.target.value})\n    const cellphoneHandler = e => setCustomerData({...customerData, cellphone: e.target.value})\n    const emailHandler = e => setCustomerData({...customerData, email: e.target.value})\n    const phoneHandler = e => setCustomerData({...customerData, phone: e.target.value})\n    const dateHandler = e => setCustomerData({...customerData, date: e.target.value})\n    const timeHandler = e => setCustomerData({...customerData, time: e.target.value})\n    const streetHandler = e => setCustomerData({...customerData, street: e.target.value})\n    const numberHandler = e => setCustomerData({...customerData, number: e.target.value})\n    const compHandler = e => setCustomerData({...customerData, comp: e.target.value})\n    const deliveryHandler = e => setCustomerData({...customerData, delivery: e.target.checked})\n    const [orderMessage, setOrderMessage] = useState('')\n\n    const sendOrder = async () => {\n        \n        if (order.length) {\n            if (validateFields(customerData)) {\n                const body = JSON.stringify({\n                    order,\n                    customerData\n                })\n\n                setOrderMessage(<Loading />)\n        \n                const { data } = await Api.post('/orders', body)\n                \n                if (data.success) {\n                    setOrderMessage(<p className='success'>Seu pedido foi criado com sucesso!</p>)\n                } else {\n                    setOrderMessage(<p className='error'>Houve algum problema ao criar o seu pedido. Por favor, tente novamente!</p>)\n                }\n            } else {\n                setOrderMessage(<p className='warning'>Preencha todos os campos!</p>)\n            }\n        } else {\n            setOrderMessage(<p className='warning'>Seu pedido não contém nenhum produto!</p>)\n        }\n    }\n\n    useEffect(() => {\n        setCustomerData({...customerData, city: props.cities.find(el => el.id === currentCity)})   \n    }, [currentCity])\n\n    useEffect(() => {\n        setCustomerData({...customerData, neighborhood: currentNeighborhood.name})\n    }, [currentNeighborhood])\n\n    useEffect(() => {\n        setCustomerData({...customerData, price: deliveryPrice})\n    }, [deliveryPrice])\n\n    /*\n        Render\n    */\n\n    const renderCitiesOptions = () => {\n        let listOfCities = ''\n\n        if (Array.isArray(props.cities))\n            if (props.cities.length) {\n                listOfCities = props.cities.map(e => <option key={e.id}>{e.name}</option>)\n            } \n\n        return listOfCities\n    }\n\n    const renderNeighborhoodsOptions = () => {\n        let listOfNeighborhoods = ''\n\n        if (Array.isArray(props.neighborhoods))\n            if (props.neighborhoods.length && currentCity) {\n                listOfNeighborhoods = neighborhoods.map(el => {\n                    if (el.city_id === currentCity)\n                        return <option key={el.id}>{el.name}</option>\n                })\n            }\n\n        return listOfNeighborhoods\n    }\n\n    const renderSnacksCategoriesOptions = () => {\n        let listOfSnacksCategories = ''\n\n        if (Array.isArray(props.snacks_categories))\n            if (props.snacks_categories.length) {\n                listOfSnacksCategories = props.snacks_categories.map(el => <option key={el.id}>{el.name}</option>)\n            }\n\n        return listOfSnacksCategories\n    }\n\n    const renderSnacksOptions = () => {\n        let listOfSnacks = ''\n\n        if (Array.isArray(props.snacks))\n            if (props.snacks.length) {\n                listOfSnacks = snacks.map(el => <option key={el.id}>{el.name}</option>)\n            }\n            \n        return listOfSnacks\n    }\n\n    return(\n        <>\n            <SectionTitle title='Faça o seu pedido'/>\n            <div className='order-container'>\n                <h3>Informações Pessoais</h3>\n                <InputContainer>\n                    Nome\n                    <input type='text' placeholder='Nome' onChange={e => nameHandler(e)} />\n                </InputContainer>\n                <InputContainer>\n                    Celular\n                    <input type='number' placeholder='Celular' onChange={e => cellphoneHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Email\n                    <input type='email' placeholder='Email' onChange={e => emailHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Telefone\n                    <input type='number' placeholder='Telefone' onChange={e => phoneHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Data para entrega do pedido\n                    <input type='date' onChange={e => dateHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Hora para entrega do pedido\n                    <input type='time' onChange={e => timeHandler(e)}/>\n                </InputContainer>\n            </div>\n            <div className='order-container'>\n                <h3>Endereço de Entrega</h3>\n                <InputContainer>\n                    Cidade\n                    <select onChange={e => cityHandler(e)}>\n                        {\n                            renderCitiesOptions()\n                        }\n                    </select>\n                </InputContainer>\n                <InputContainer>\n                    Bairro\n                    <select onChange={e => neighborhoodHandler(e)}>\n                        {\n                            renderNeighborhoodsOptions()\n                        }\n                    </select>\n                </InputContainer>\n                <InputContainer>\n                    Endereço\n                    <input type='text' placeholder='Rua' onChange={e => streetHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Número\n                    <input type='number' placeholder='Nº' min='0' onChange={e => numberHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Complemento\n                    <input type='text' placeholder='Complemento' onChange={e => compHandler(e)}/>\n                </InputContainer>\n                <InputContainer>\n                    Valor de Entrega: R$ { isNaN(deliveryPrice) ? '0,00' : deliveryPrice.toFixed(2).replace('.', ',') }\n\n                    <label>\n                        Incluir Entrega?\n                        <input type='checkbox' onChange={e => deliveryHandler(e)}/>\n                    </label>\n                </InputContainer>\n            </div>\n            <div className='products'>\n                <h3>Escolha seus produtos</h3>\n                <ul className='products__title'>\n                    <li>Categoria</li>\n                    <li>Nome</li>\n                    <li>Preço Unitário</li>\n                    <li>Quantidade</li>\n                    <li>Total</li>\n                </ul>\n                <ul className='products__menu'>\n                    <li>\n                        <InputContainer>\n                            <p>Categoria</p>\n                            <select onChange={e => snackCategoryHandler(e)}>\n                                {\n                                    renderSnacksCategoriesOptions()\n                                }\n                            </select>\n                        </InputContainer>\n                    </li>\n                    <li>\n                        <InputContainer>\n                            <p>Nome</p>\n                            <select onChange={e => snacksHandler(e)}>\n                                {\n                                    renderSnacksOptions() \n                                }\n                            </select>\n                        </InputContainer>\n                    </li>\n                    <li>\n                        <p>Valor unitário</p>\n                        R$ {currentSnack ? parseFloat(currentSnack.price).toFixed(2).replace('.', ',') : '0,00'}\n                    </li>\n                    <li>\n                        <InputContainer>\n                            <p>Quantidade mínima</p>\n                            <input type='number' min='0' value={isNaN(quantity) ? '' : quantity} step={currentSnack ? currentSnack.minimum : 1} onChange={e => quantityHandler(e)}/>\n                            <small>Escolha de {currentSnack ? currentSnack.minimum : 1} em {currentSnack ? currentSnack.minimum : 1} </small>\n                        </InputContainer>\n                    </li>\n                    <li>\n                        <p>Total</p>\n                        <div>R$ { isNaN(total) ? '0,00' : total.toFixed(2).replace('.', ',')}</div>\n                    </li>\n                </ul>\n                <Button title='Adicionar ao pedido' action={addToOrder} />                \n            </div>\n            <div className='your-order'>\n                <h3>Seu pedido</h3>\n                {\n                    orderTitle()\n                }\n                {\n                    order.map((el, i) =>{\n                        return(\n                            <ul className='order-list' key={i}>\n                                <li>{i+1}</li>\n                                <li>{el.name}</li>\n                                <li>{el.category.name}</li>\n                                <li>R$ {parseFloat(el.price).toFixed(2).replace('.', ',')}</li>\n                                <li>{el.quantity}</li>\n                                <li>R$ {el.total.toFixed(2).replace('.', ',')}</li>\n                            </ul>\n                        )\n                    })\n                }\n                <p className='order-total'>\n                    Total do pedido: R$ { order.reduce((t, e) => t + e.total, 0).toFixed(2).replace('.', ',') }\n                </p>\n                {\n                    orderMessage\n                }\n                <Button title=\"Enviar pedido\" action={sendOrder}/>\n            </div>\n        </>\n    )\n}\n\nexport default OrderData\n","import React, { useState, useEffect } from 'react';\nimport AppContainer from './components/AppContainer';\nimport OrderData from './components/OrderData';\nimport Api from './services/api';\nimport './styles/style.css';\n\nfunction App() {\t\n\tconst [ready, setReady] = useState(false);\n\tconst [data, setData] = useState({\n\t\tcities: [], \n\t\tneighborhoods: [], \n\t\tbuffets: [], \n\t\tbuffets_categories: [],\n\t\tsnacks: [],\n\t\tsnacks_categories: []\n\t});\n\n\tuseEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tconst cities = await Api.get('/cities');\n\t\t\tconst neighborhoods = await Api.get('/neighborhoods');\n\t\t\tconst buffets = await Api.get('/buffets');\n\t\t\tconst buffets_categories = await Api.get('/buffets/categories');\n\t\t\tconst snacks = await Api.get('/snacks');\n\t\t\tconst snacks_categories = await Api.get('/snacks/categories');\n\n\t\t\tsetData({\n\t\t\t\tcities: cities.data, \n\t\t\t\tneighborhoods: neighborhoods.data, \n\t\t\t\tbuffets: buffets.data, \n\t\t\t\tbuffets_categories: buffets_categories.data,\n\t\t\t\tsnacks: snacks.data,\n\t\t\t\tsnacks_categories: snacks_categories.data\n\t\t\t});\t\n\t\t\t\n\t\t\tsetReady(true);\n\t\t};\n\n\t\tgetData();\n\t}, []);\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t{ready && <OrderData \n\t\t\t\tcities={data.cities}\n\t\t\t\tneighborhoods={data.neighborhoods}\t\n\t\t\t\tsnacks_categories={data.snacks_categories}\n\t\t\t\tsnacks={data.snacks}\n\t\t\t/>}\n\t\t</AppContainer>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}